[{"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\index.js":"1","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\App.js":"2","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\Home.js":"3","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\AuthRoute.js":"4","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\Register.js":"5","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\context\\auth.js":"6","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\Login.js":"7","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\graphql.js":"8","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\hooks.js":"9","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\SinglePost.js":"10","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\MyPopup.js":"11","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\ApolloProvider.js":"12","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\InfoSection\\Data.js":"13","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\InfoSection\\index.js":"14","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Navbar\\index.js":"15","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Services\\index.js":"16","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Footer\\index.js":"17","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\InfoSection\\InfoElements.js":"18","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\ButtonElement.js":"19","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Services\\ServicesElements.js":"20","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Navbar\\NavBarElements.js":"21","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Footer\\FooterElements.js":"22","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\Dashboard.js":"23","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\PostCard.js":"24","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\PostForm.js":"25","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\DeleteButton.js":"26","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\LikeButton.js":"27","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\MenuBar.js":"28","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\globalStyles.js":"29"},{"size":243,"mtime":1614184396738,"results":"30","hashOfConfig":"31"},{"size":1527,"mtime":1617889062251,"results":"32","hashOfConfig":"31"},{"size":791,"mtime":1617099017776,"results":"33","hashOfConfig":"31"},{"size":436,"mtime":1612462659140,"results":"34","hashOfConfig":"31"},{"size":3339,"mtime":1617382277423,"results":"35","hashOfConfig":"31"},{"size":1337,"mtime":1612460496328,"results":"36","hashOfConfig":"31"},{"size":2561,"mtime":1617382267215,"results":"37","hashOfConfig":"31"},{"size":332,"mtime":1612534893444,"results":"38","hashOfConfig":"31"},{"size":415,"mtime":1612455701297,"results":"39","hashOfConfig":"31"},{"size":5207,"mtime":1617889826782,"results":"40","hashOfConfig":"31"},{"size":203,"mtime":1612796318730,"results":"41","hashOfConfig":"31"},{"size":897,"mtime":1614184396744,"results":"42","hashOfConfig":"31"},{"size":1615,"mtime":1617099017770,"results":"43","hashOfConfig":"31"},{"size":1329,"mtime":1617099017774,"results":"44","hashOfConfig":"31"},{"size":2574,"mtime":1617099017776,"results":"45","hashOfConfig":"31"},{"size":1532,"mtime":1614184396734,"results":"46","hashOfConfig":"31"},{"size":3211,"mtime":1617099017768,"results":"47","hashOfConfig":"31"},{"size":1866,"mtime":1617099017771,"results":"48","hashOfConfig":"31"},{"size":711,"mtime":1617099017765,"results":"49","hashOfConfig":"31"},{"size":1702,"mtime":1617099017776,"results":"50","hashOfConfig":"31"},{"size":3051,"mtime":1617099017775,"results":"51","hashOfConfig":"31"},{"size":3538,"mtime":1617099017766,"results":"52","hashOfConfig":"31"},{"size":1316,"mtime":1617296672916,"results":"53","hashOfConfig":"31"},{"size":1823,"mtime":1617889197474,"results":"54","hashOfConfig":"31"},{"size":1913,"mtime":1614184396717,"results":"55","hashOfConfig":"31"},{"size":1897,"mtime":1614184396709,"results":"56","hashOfConfig":"31"},{"size":1718,"mtime":1617890008099,"results":"57","hashOfConfig":"31"},{"size":7054,"mtime":1617285588591,"results":"58","hashOfConfig":"31"},{"size":1122,"mtime":1617099017763,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"14k7p2n",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\index.js",[],["124","125"],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\App.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\Home.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\AuthRoute.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\Register.js",["126"],"import React, { useState, useContext } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Register(props) {\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const { onChange, onSubmit, values } = useForm(registerUser, {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n    update(_, { data: { register: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/dashboard\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function registerUser() {\r\n    addUser();\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\" style={{ marginTop: 100 }}>\r\n      <form\r\n        onSubmit={onSubmit}\r\n        className={classes.root}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <h1>Register</h1>\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          value={values.username}\r\n          error={errors.username ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={values.email}\r\n          error={errors.email ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={values.password}\r\n          error={errors.password ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          label=\"Confirm Password\"\r\n          variant=\"outlined\"\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          value={values.confirmPassword}\r\n          error={errors.confirmPassword ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        username: $username\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    ) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\context\\auth.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\Login.js",["127"],"import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      props.history.push(\"/dashboard\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\" style={{ marginTop: 100 }}>\r\n      <form\r\n        onSubmit={onSubmit}\r\n        className={classes.root}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <h1>Login</h1>\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          value={values.username}\r\n          error={errors.username ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={values.password}\r\n          error={errors.password ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\graphql.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\hooks.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\SinglePost.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\MyPopup.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\util\\ApolloProvider.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\InfoSection\\Data.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\InfoSection\\index.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Navbar\\index.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Services\\index.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Footer\\index.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\InfoSection\\InfoElements.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\ButtonElement.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Services\\ServicesElements.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Navbar\\NavBarElements.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\landing-page\\Footer\\FooterElements.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\pages\\Dashboard.js",["128","129","130"],"import React, { useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n//import { Grid, Transition } from \"semantic-ui-react\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport PostCard from \"../components/dashboard/PostCard\";\r\nimport { FETCH_POSTS_QUERY } from \"../util/graphql\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 100,\r\n  },\r\n  paper: {\r\n    height: 200,\r\n    width: 300,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(10),\r\n  },\r\n}));\r\n\r\nfunction Dashboard() {\r\n  const { user } = useContext(AuthContext);\r\n  let posts = \"\";\r\n  const { loading, data } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n  if (data) {\r\n    posts = data.getPosts;\r\n  }\r\n\r\n  const [spacing, setSpacing] = React.useState(1);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section className={classes.root}>\r\n      <h1 style={{ textAlign: \"center\", marginBottom: 50 }}>RecentPosts</h1>\r\n      <Grid container justify=\"center\" spacing={spacing}>\r\n        {posts &&\r\n          posts.map((post) => (\r\n            <Grid key={post.id}>\r\n              <PostCard post={post} />\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\PostCard.js",["131"],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\PostForm.js",[],["132","133"],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\DeleteButton.js",[],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\LikeButton.js",["134"],"C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\dashboard\\MenuBar.js",["135","136","137","138","139","140"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\n// Material-UI Imports\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Drawer,\r\n  Link,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AppLogo from \"../../assets/images/yinyang.png\";\r\n\r\n// Create custom styles with Material-UI\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    marginBottom: \"50px\",\r\n    \"@media (max-width: 900px)\": {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  logo: {\r\n    fontFamily: \"Alegreya\",\r\n    fontWeight: 600,\r\n    color: \"#353535\",\r\n    textAlign: \"left\",\r\n    padding: 5,\r\n  },\r\n  menuButton: {\r\n    fontWeight: 700,\r\n    size: \"20px\",\r\n    marginLeft: \"20px\",\r\n    marginRight: \"20px\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"1000px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  drawerContainer: {\r\n    padding: \"20px 30px\",\r\n  },\r\n}));\r\n\r\nfunction MenuBar() {\r\n  const { user, logout } = useContext(AuthContext);\r\n  const pathname = window.location.pathname;\r\n  const path = pathname === \"/\" ? \"home\" : pathname.substr(1);\r\n  const [activeItem, setActiveItem] = useState(path);\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n\r\n  // Import the custom styles created above\r\n  const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  // Detect Window change and set responsiveness\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n    setResponsiveness();\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n\r\n  // To display on Desktop with No User\r\n  const displayDesktopNoUser = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        <Typography variant=\"h5\" component=\"h1\" className={logo}>\r\n          <IconButton component={RouterLink} to=\"/dashboard\">\r\n            <img src={AppLogo} style={{ width: 35 }} />\r\n          </IconButton>\r\n          Philosophypster\r\n        </Typography>\r\n        <div>\r\n          <Button\r\n            color=\"primary\"\r\n            className={menuButton}\r\n            component={RouterLink}\r\n            to=\"/login\"\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            className={menuButton}\r\n            component={RouterLink}\r\n            to=\"/register\"\r\n            variant=\"contained\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  // To display on Mobile with No User\r\n  const displayMobileNoUser = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleDrawerOpen}\r\n        >\r\n          <MenuIcon style={{ fill: \"#353535\" }} />\r\n        </IconButton>\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n        >\r\n          <div className={drawerContainer}>\r\n            <Link\r\n              component={RouterLink}\r\n              to=\"/login\"\r\n              color=\"primary\"\r\n              key=\"login\"\r\n            >\r\n              <MenuItem>Login</MenuItem>\r\n            </Link>\r\n            <Link\r\n              component={RouterLink}\r\n              to=\"/register\"\r\n              color=\"primary\"\r\n              key=\"register\"\r\n            >\r\n              <MenuItem>Register</MenuItem>\r\n            </Link>\r\n          </div>\r\n        </Drawer>\r\n        <Typography variant=\"h5\" component=\"h1\" className={logo}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            aria-haspopup=\"true\"\r\n          >\r\n            <img src={AppLogo} style={{ width: 35 }} />\r\n          </IconButton>\r\n          Philosophypster\r\n        </Typography>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  // To display on Desktop with Auth User\r\n  const displayDesktopYesUser = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        <Typography variant=\"h5\" component=\"h1\" className={logo}>\r\n          <IconButton component={RouterLink} to=\"/dashboard\">\r\n            <img src={AppLogo} style={{ width: 35 }} />\r\n          </IconButton>\r\n          Philosophypster\r\n        </Typography>\r\n        <div>\r\n          <Button color=\"primary\" className={menuButton} onClick={logout}>\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  // To display on Mobile with Auth User\r\n  const displayMobileYesUser = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleDrawerOpen}\r\n        >\r\n          <MenuIcon style={{ fill: \"#353535\" }} />\r\n        </IconButton>\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n        >\r\n          <div className={drawerContainer}>\r\n            <Link onClick={logout} color=\"primary\">\r\n              <MenuItem>Logout</MenuItem>\r\n            </Link>\r\n          </div>\r\n        </Drawer>\r\n        <Typography variant=\"h5\" component=\"h1\" className={logo}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            aria-haspopup=\"true\"\r\n          >\r\n            <img src={AppLogo} style={{ width: 35 }} />\r\n          </IconButton>\r\n          Philosophypster\r\n        </Typography>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const menuBar = user ? (\r\n    // If User is Active\r\n    <AppBar className={header} position=\"fixed\">\r\n      {mobileView ? displayMobileYesUser() : displayDesktopYesUser()}\r\n    </AppBar>\r\n  ) : (\r\n    // If there is no user\r\n    <AppBar className={header} position=\"fixed\">\r\n      {mobileView ? displayMobileNoUser() : displayDesktopNoUser()}\r\n    </AppBar>\r\n  );\r\n\r\n  return menuBar;\r\n}\r\n\r\nexport default MenuBar;\r\n","C:\\Users\\neves\\Documents\\Programming\\Web\\Philosophypster\\client\\src\\components\\globalStyles.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":33,"column":21,"nodeType":"147","messageId":"148","endLine":33,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":31,"column":23,"nodeType":"147","messageId":"148","endLine":31,"endColumn":30},{"ruleId":"145","severity":1,"message":"149","line":26,"column":11,"nodeType":"147","messageId":"148","endLine":26,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":28,"column":11,"nodeType":"147","messageId":"148","endLine":28,"endColumn":18},{"ruleId":"145","severity":1,"message":"150","line":34,"column":19,"nodeType":"147","messageId":"148","endLine":34,"endColumn":29},{"ruleId":"145","severity":1,"message":"151","line":23,"column":8,"nodeType":"147","messageId":"148","endLine":23,"endColumn":15},{"ruleId":"141","replacedBy":"152"},{"ruleId":"143","replacedBy":"153"},{"ruleId":"145","severity":1,"message":"154","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"155","line":58,"column":10,"nodeType":"147","messageId":"148","endLine":58,"endColumn":20},{"ruleId":"145","severity":1,"message":"156","line":59,"column":9,"nodeType":"147","messageId":"148","endLine":59,"endColumn":24},{"ruleId":"157","severity":1,"message":"158","line":86,"column":13,"nodeType":"159","endLine":86,"endColumn":56},{"ruleId":"157","severity":1,"message":"158","line":163,"column":13,"nodeType":"159","endLine":163,"endColumn":56},{"ruleId":"157","severity":1,"message":"158","line":177,"column":13,"nodeType":"159","endLine":177,"endColumn":56},{"ruleId":"157","severity":1,"message":"158","line":227,"column":13,"nodeType":"159","endLine":227,"endColumn":56},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setSpacing' is assigned a value but never used.","'MyPopup' is defined but never used.",["160"],["161"],"'Link' is defined but never used.","'activeItem' is assigned a value but never used.","'handleItemClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]